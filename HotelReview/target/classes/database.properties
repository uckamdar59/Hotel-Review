get_all_hotels=\
    SELECT * FROM hotel.hotel

get_hotel_by_id_with_reviews=\
    SELECT h.*,re.* FROM hotel.hotel h Join hotel.review re On h.hotelId = re.hotelId WHERE h.hotelId = :hotelId

get_hotel_by_id=\
  SELECT * FROM hotel.hotel WHERE hotelId = :hotelId

insert_hotel=\
    INSERT into hotel.hotel ( \
        hotelId, \
        hotelName, \
        hotelCity, \
        hotelCountry, \
        hotelAddress, \
        hotelRoomPrice, \
        hotelRooms \
    ) \
    values ( \
        :hotelId, \
        :hotelName, \
        :hotelCity, \
        :hotelCountry, \
        :hotelAddress, \
        :hotelRoomPrice, \
        :hotelRooms \
    )


update_hotel=\
    UPDATE hotel.hotel \
    SET hotelName = :hotelName, \
        hotelCity = hotelCity, \
        hotelCountry = :hotelCountry, \
        hotelRoomPrice = :hotelRoomPrice, \
        hotelRooms = :hotelRooms \
    WHERE hotelId = :hotelId

get_review_by_hotel_id=\
    SELECT * FROM hotel.review WHERE hotelId = :hotelId

get_review_by_id=\
    SELECT * FROM hotel.review WHERE reviewId = :reviewId

insert_review=\
    INSERT into hotel.review ( \
        reviewId, \
        hotelId, \
        rating, \
        comments, \
        userId \
    ) \
    values ( \
        :reviewId, \
        :hotelId, \
        :rating, \
        :comments, \
        :userId \
    )

update_review=\
    UPDATE hotel.review \
    SET rating = :rating, \
        comments = :comments \
    WHERE reviewId = :reviewId

get_reservation_by_hotel_id=\
    SELECT * FROM hotel.reservation WHERE hotelId = :hotelId

insert_reservation=\
    INSERT into hotel.reservation ( \
        hotelId, \
        reservationDate, \
        roomsAvailable \
    ) \
    values ( \
        :hotelId, \
        :reservationDate, \
        :roomsAvailable \
    )

update_reservation=\
    UPDATE hotel.reservation \
    SET roomsAvailable = :roomsAvailable \
    WHERE hotelId = :hotelId AND reservationDate = :reservationDate


get_user_by_id=\
    SELECT * FROM hotel.user WHERE userId = :userId

insert_user=\
    INSERT into hotel.user ( \
        userId, \
        username \
    ) \
    values ( \
        :userId, \
        :username \
    )

search_hotel=\
    SELECT h.hotelId, h.hotelname,h.hotelcity,h.hoteladdress, h.hotelcountry, h.hotelRoomPrice,avg(re.rating) as averageRating from hotel.hotel h \
    JOIN hotel.reservation r on h.hotelId = r.hotelId \
    JOIN hotel.review re on h.hotelId =re.hotelId \
    WHERE (h.hotelcity = :hotelCity) \
    AND reservationDate between :startDate AND :endDate \
    AND r.roomsAvailable >= :roomsRequired \
    AND h.hotelId in (select hotelId from hotel.review rev group by rev.hotelId having avg(rev.rating)> :averageRating) \
    group by h.hotelId,h.hotelname,h.hotelcity,h.hoteladdress, h.hotelcountry, h.hotelRoomPrice 


#
# --------Database scripts -----------------
#
#
#
#CREATE SCHEMA IF NOT EXISTS hotel;
#
#
#ALTER SCHEMA hotel OWNER TO postgres;
#
#
#CREATE TABLE IF NOT EXISTS hotel.hotel (
#hotelId character varying(36) NOT NULL,
#hotelName character varying(36) NOT NULL,
#hotelCity character varying(36) NOT NULL,
#hotelCountry character varying(36) NOT NULL,
#hotelAddress character varying(36) NOT NULL,
#hotelRoomPrice numeric(7,2) NOT NULL,
#hotelRooms numeric(7,0) NOT NULL
#);
#
#CREATE TABLE IF NOT EXISTS hotel.review (
#reviewId character varying(36) NOT NULL,
#hotelId character varying(36) NOT NULL,
#rating numeric(2,0) NOT NULL,
#userId character varying(36) NOT NULL,
#comments character varying(1000)
#);
#
#CREATE TABLE IF NOT EXISTS hotel.reservation (
#hotelId character varying(36) NOT NULL,
#reservationDate DATE NOT NULL,
#roomsAvailable numeric(7,0) NOT NULL
#);
#
#CREATE TABLE IF NOT EXISTS hotel."user" (
#userId character varying(36) NOT NULL,
#username character varying(36) NOT NULL
#);
#
#
#
#ALTER TABLE ONLY hotel.hotel
#ADD CONSTRAINT hotel_id_pk PRIMARY KEY (hotelId);
#ALTER TABLE ONLY hotel.review
#ADD CONSTRAINT review_id_pk PRIMARY KEY (reviewId);
#ALTER TABLE hotel.reservation
#ADD CONSTRAINT reservation_pk
#PRIMARY KEY (hotelId, reservationDate);
#ALTER TABLE ONLY hotel."user"
#ADD CONSTRAINT user_id_pk PRIMARY KEY (userId);
#ALTER TABLE ONLY hotel.review
#ADD CONSTRAINT hotel_id_user_id_unique UNIQUE (hotelId, userId);
#
#
#ALTER TABLE ONLY hotel.review
#ADD CONSTRAINT hotel_id_fk FOREIGN KEY (hotelId) REFERENCES hotel.hotel(hotelId) NOT VALID;
#
#ALTER TABLE ONLY hotel.review
#ADD CONSTRAINT user_id_fk FOREIGN KEY (userId) REFERENCES hotel."user"(userId) NOT VALID;
#
#ALTER TABLE ONLY hotel.reservation
#ADD CONSTRAINT hotel_id_fk FOREIGN KEY (hotelId) REFERENCES hotel.hotel(hotelId) NOT VALID;

